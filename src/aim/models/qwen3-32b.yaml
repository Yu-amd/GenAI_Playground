model_id: Qwen/Qwen3-32B
name: Qwen3 32B
builder: Alibaba Qwen Team
family: Qwen3
size: 32.8B
huggingface_id: Qwen/Qwen3-32B

description: >
  Qwen3-32B is the latest generation of large language models in the Qwen series, offering groundbreaking 
  advancements in reasoning, instruction-following, agent capabilities, and multilingual support. 
  It uniquely supports seamless switching between thinking mode (for complex logical reasoning, math, and coding) 
  and non-thinking mode (for efficient, general-purpose dialogue) within a single model.

logo: model_qwen3_32b.png

readiness_level: Production-Ready
status_badges:
  - BF16
  - FlashAttention
  - Featured

tags:
  - Text Generation
  - Reasoning
  - Code Generation
  - Multilingual
  - Instruction-Tuned
  - vLLM-Compatible
  - sglang-Compatible

license: Apache 2.0

endpoint: https://api.inference-hub.com/v1/chat/completions

demo_assets:
  notebook: https://github.com/inference-hub/notebooks/qwen3-32b-demo.ipynb
  demo_link: https://playground.inference-hub.com/models/Qwen/Qwen3-32B

aim_recipes:
  - name: MI300X BF16
    hardware: MI300X
    precision: bf16
    recipe_file: configs/qwen3-32b-mi300x-bf16.yaml

  - name: MI250 BF16
    hardware: MI250
    precision: bf16
    recipe_file: configs/qwen3-32b-mi250-bf16.yaml

api_examples:
  python: |
    import requests

    headers = {
        "Authorization": "Bearer YOUR_API_KEY",
        "Content-Type": "application/json"
    }

    payload = {
        "model": "Qwen/Qwen3-32B",
        "messages": [{"role": "user", "content": "Hello"}],
        "stream": False
    }

    response = requests.post("https://api.inference-hub.com/v1/chat/completions", headers=headers, json=payload)
    print(response.json())

  javascript: |
    const response = await fetch("https://api.inference-hub.com/v1/chat/completions", {
      method: "POST",
      headers: {
        "Authorization": "Bearer YOUR_API_KEY",
        "Content-Type": "application/json"
      },
      body: JSON.stringify({
        model: "Qwen/Qwen3-32B",
        messages: [{ role: "user", content: "Hello" }],
        stream: false
      })
    });

    const data = await response.json();
    console.log(data.choices[0].message.content);

  shell: |
    curl -X POST https://api.inference-hub.com/v1/chat/completions \
      -H "Authorization: Bearer YOUR_API_KEY" \
      -H "Content-Type: application/json" \
      -d '{
        "model": "Qwen/Qwen3-32B",
        "messages": [{"role": "user", "content": "Hello"}],
        "stream": false
      }'

  java: |
    HttpClient client = HttpClient.newHttpClient();
    HttpRequest request = HttpRequest.newBuilder()
        .uri(URI.create("https://api.inference-hub.com/v1/chat/completions"))
        .header("Authorization", "Bearer YOUR_API_KEY")
        .header("Content-Type", "application/json")
        .POST(HttpRequest.BodyPublishers.ofString("""
          {
            "model": "Qwen/Qwen3-32B",
            "messages": [{"role": "user", "content": "Hello"}],
            "stream": false
          }
        """))
        .build();

    HttpResponse<String> response = client.send(request, HttpResponse.BodyHandlers.ofString());
    System.out.println(response.body());

  go: |
    package main

    import (
        "bytes"
        "fmt"
        "io/ioutil"
        "net/http"
    )

    func main() {
        jsonStr := []byte(`{
            "model": "Qwen/Qwen3-32B",
            "messages": [{"role": "user", "content": "Hello"}],
            "stream": false
        }`)

        req, _ := http.NewRequest("POST", "https://api.inference-hub.com/v1/chat/completions", bytes.NewBuffer(jsonStr))
        req.Header.Set("Authorization", "Bearer YOUR_API_KEY")
        req.Header.Set("Content-Type", "application/json")

        client := &http.Client{}
        resp, _ := client.Do(req)
        body, _ := ioutil.ReadAll(resp.Body)
        fmt.Println(string(body))
    }

  csharp: |
    using System.Net.Http;
    using System.Text;
    using System.Threading.Tasks;

    var client = new HttpClient();
    var request = new HttpRequestMessage(HttpMethod.Post, "https://api.inference-hub.com/v1/chat/completions");
    request.Headers.Add("Authorization", "Bearer YOUR_API_KEY");

    var json = """
    {
        "model": "Qwen/Qwen3-32B",
        "messages": [{"role": "user", "content": "Hello"}],
        "stream": false
    }
    """;

    request.Content = new StringContent(json, Encoding.UTF8, "application/json");

    var response = await client.SendAsync(request);
    var responseBody = await response.Content.ReadAsStringAsync();
    Console.WriteLine(responseBody);

model_card:
  overview: >
    Qwen3-32B is the latest generation of large language models in the Qwen series, offering groundbreaking 
    advancements in reasoning, instruction-following, agent capabilities, and multilingual support. 
    It uniquely supports seamless switching between thinking mode (for complex logical reasoning, math, and coding) 
    and non-thinking mode (for efficient, general-purpose dialogue) within a single model.

  intended_use:
    - Complex reasoning and problem solving
    - Code generation and analysis
    - Mathematical computations
    - Multilingual text generation
    - Agent-based tasks and tool integration
    - Creative writing and role-playing
    - Multi-turn conversations

  limitations:
    - May hallucinate facts
    - Not suitable for safety-critical use
    - Large model size requires significant computational resources
    - Performance may vary depending on thinking mode settings

  training_data: >
    Diverse web corpus, code repositories, mathematical datasets, and multilingual content. 
    Training data cutoff: 2024.

  evaluation:
    - "MMLU: 78.2"
    - "HumanEval (code): 65.8%"
    - "GSM8K: 89.3%"
    - "MATH: 52.1%"
    - "MT-Bench: 9.1"

  known_issues:
    - May produce biased content
    - Thinking mode requires careful parameter tuning
    - Performance varies across different languages and domains
    - Requires adequate output length for complex problems

  references:
    - https://huggingface.co/Qwen/Qwen3-32B
    - https://github.com/QwenLM/Qwen3
    - https://arxiv.org/abs/2505.09388 