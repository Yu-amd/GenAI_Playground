model_id: google/gemma-3-4b-it
name: Gemma 3 4B IT
builder: Google DeepMind
family: Gemma
size: 4B
huggingface_id: google/gemma-3-4b-it
description: 'Gemma is a family of lightweight, state-of-the-art open models from
  Google, built from the same research and technology used to create the Gemini models.
  Gemma 3 models are multimodal, handling text and image input and generating text
  output, with open weights for both pre-trained variants and instruction-tuned variants.

  '
logo: model_Gemma.png
readiness_level: Production-Ready
status_badges:
- FP16
- FlashAttention
- Featured
tags:
- Multimodal
- Lightweight
- Open Weights
- Instruction-Tuned
- vLLM-Compatible
- sglang-Compatible
license: Apache 2.0
endpoint: https://api.inference-hub.com/v1/chat/completions
demo_assets:
  notebook: https://github.com/inference-hub/notebooks/gemma-3-4b-it-demo.ipynb
  demo_link: https://playground.inference-hub.com/models/google/gemma-3-4b-it
aim_recipes:
- name: MI300X FP16
  hardware: MI300X
  precision: fp16
  recipe_file: configs/gemma-3-4b-it-mi300x-fp16.yaml
- name: MI250 FP16
  hardware: MI250
  precision: fp16
  recipe_file: configs/gemma-3-4b-it-mi250-fp16.yaml
api_examples:
  python: "import requests\n\nheaders = {\n    \"Authorization\": \"Bearer YOUR_API_KEY\"\
    ,\n    \"Content-Type\": \"application/json\"\n}\n\npayload = {\n    \"model\"\
    : \"google/gemma-3-4b-it\",\n    \"messages\": [{\"role\": \"user\", \"content\"\
    : \"Hello\"}],\n    \"stream\": False\n}\n\nresponse = requests.post(\"https://api.inference-hub.com/v1/chat/completions\"\
    , headers=headers, json=payload)\nprint(response.json())\n"
  javascript: "const response = await fetch(\"https://api.inference-hub.com/v1/chat/completions\"\
    , {\n  method: \"POST\",\n  headers: {\n    \"Authorization\": \"Bearer YOUR_API_KEY\"\
    ,\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n\
    \    model: \"google/gemma-3-4b-it\",\n    messages: [{ role: \"user\", content:\
    \ \"Hello\" }],\n    stream: false\n  })\n});\n\nconst data = await response.json();\n\
    console.log(data.choices[0].message.content);\n"
  shell: "curl -X POST https://api.inference-hub.com/v1/chat/completions \\\n  -H\
    \ \"Authorization: Bearer YOUR_API_KEY\" \\\n  -H \"Content-Type: application/json\"\
    \ \\\n  -d '{\n    \"model\": \"google/gemma-3-4b-it\",\n    \"messages\": [{\"\
    role\": \"user\", \"content\": \"Hello\"}],\n    \"stream\": false\n  }'\n"
  java: "HttpClient client = HttpClient.newHttpClient();\nHttpRequest request = HttpRequest.newBuilder()\n\
    \    .uri(URI.create(\"https://api.inference-hub.com/v1/chat/completions\"))\n\
    \    .header(\"Authorization\", \"Bearer YOUR_API_KEY\")\n    .header(\"Content-Type\"\
    , \"application/json\")\n    .POST(HttpRequest.BodyPublishers.ofString(\"\"\"\n\
    \      {\n        \"model\": \"google/gemma-3-4b-it\",\n        \"messages\":\
    \ [{\"role\": \"user\", \"content\": \"Hello\"}],\n        \"stream\": false\n\
    \      }\n    \"\"\"))\n    .build();\n\nHttpResponse<String> response = client.send(request,\
    \ HttpResponse.BodyHandlers.ofString());\nSystem.out.println(response.body());\n"
  go: "package main\n\nimport (\n    \"bytes\"\n    \"fmt\"\n    \"io/ioutil\"\n \
    \   \"net/http\"\n)\n\nfunc main() {\n    jsonStr := []byte(`{\n        \"model\"\
    : \"google/gemma-3-4b-it\",\n        \"messages\": [{\"role\": \"user\", \"content\"\
    : \"Hello\"}],\n        \"stream\": false\n    }`)\n\n    req, _ := http.NewRequest(\"\
    POST\", \"https://api.inference-hub.com/v1/chat/completions\", bytes.NewBuffer(jsonStr))\n\
    \    req.Header.Set(\"Authorization\", \"Bearer YOUR_API_KEY\")\n    req.Header.Set(\"\
    Content-Type\", \"application/json\")\n\n    client := &http.Client{}\n    resp,\
    \ _ := client.Do(req)\n    body, _ := ioutil.ReadAll(resp.Body)\n    fmt.Println(string(body))\n\
    }\n"
  csharp: "using System.Net.Http;\nusing System.Text;\nusing System.Threading.Tasks;\n\
    \nvar client = new HttpClient();\nvar request = new HttpRequestMessage(HttpMethod.Post,\
    \ \"https://api.inference-hub.com/v1/chat/completions\");\nrequest.Headers.Add(\"\
    Authorization\", \"Bearer YOUR_API_KEY\");\n\nvar json = \"\"\"\n{\n    \"model\"\
    : \"google/gemma-3-4b-it\",\n    \"messages\": [{\"role\": \"user\", \"content\"\
    : \"Hello\"}],\n    \"stream\": false\n}\n\"\"\";\n\nrequest.Content = new StringContent(json,\
    \ Encoding.UTF8, \"application/json\");\n\nvar response = await client.SendAsync(request);\n\
    var responseBody = await response.Content.ReadAsStringAsync();\nConsole.WriteLine(responseBody);\n"
model_card:
  overview: ''
  intended_use: []
  limitations: []
  training_data: ''
  evaluation: []
  known_issues: []
  references: []
